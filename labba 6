#Книжный магазин подает рождественские открытки К видов. Покупателю нужно N открыток. Сформировать все возможные комплекты покупки.
#1 часть
K = int(input("Введите количество видов рождественских открыток: "))
N = int(input("Введите  количество  открыток, которое нужно купить : "))
def cwr(iterable, r):
    pool = tuple(iterable)
    n = len(pool)
    if not n and r:
        return
    indices = [0] * r
    yield tuple(pool[i] for i in indices)
    while True:
        for i in reversed(range(r)):
            if indices[i] != n - 1:
                break
        else:
            return
        indices[i:] = [indices[i] + 1] * (r - i)
        yield tuple(pool[i] for i in indices)
#Часть 1


# #Функция генерирует все комбо длинной N
def generate_combo(K, N):
    card_types = []  # Количество видов открыток
    for i in range(1, K + 1):
        card_types.append(i)
    comboes = []

    for num_cards in range(1, N+1):
        for combo in cwr(card_types, num_cards):
            if len(combo) == N:
                comboes.append(combo)
    return comboes
for i in generate_combo(K,N):
        print(i)

#2 часть усложненная часть. Теперь у каждой открытки есть своя цена и она не должна привышать твой бюджет. Каждая открытка максимум 2 раза покупается.
LIMIT = 2  # максимальное количество открыток каждого вида, которое можно купить
max_sum = int(input("Введите максимальную сумму, которую вы можете потратить: "))
card_prices = []
for i in range(K):
    price = int(input(f"Введите цену для открытки номер {i + 1}: "))
    card_prices.append(price)

comboes=[]


def generate_combo_2(K, N, max_sum):
    card_types = []  # Количество видов открыток
    for i in range(1, K + 1):
        card_types.append(i)
    comboes = []
    for num_cards in range(1, N + 1):
        card_types = []  # Количество видов открыток
        for i in range(1, K + 1):
            card_types.append(i)
        for combo in cwr(card_types, num_cards):
            if len(combo) == N:
                if len(set(combo)) >= len(combo) - 1:
                    total_price = sum(card_prices[i - 1] for i in combo)
                    if total_price <= max_sum:
                        comboes.append((combo, total_price))
    return comboes

for combo, total_price in generate_combo_2(K, N, max_sum):
    if len(combo) == N:
        comboes.append((combo, total_price))

if len(comboes) == 0:
    print("Невозможно купить открытки с заданными параметрами")
else:
    for combo, total_price in comboes:
        cards_output = ""
        for card in combo:
            card_output = f"Открытка {card} ({card_prices[card - 1]} руб.)\n"
            cards_output += card_output
        print(f"Сумма покупки: {total_price} руб.\n{cards_output}")
